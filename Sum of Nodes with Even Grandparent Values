/*Given a binary tree root, return the sum of all node values whose grandparents have an even value.

Constraints

    0 ≤ n ≤ 100,000 where n is the number of nodes in root

Example 1
Input
Visualize

root =

8

4

3

6

7

2
Output

15

Explanation

Nodes 6, 7, and 2 have an even value grandparent.
*/
//code goes here


/**
 * class Tree {
 *     public:
 *         int val;
 *         Tree *left;
 *         Tree *right;
 * };
 */

 int grandsum(Tree *root)
 {
     int s=0;
     if(root->left!=NULL)
     {
         if(root->left->left!=NULL)
          s+=root->left->left->val;
         if(root->left->right!=NULL)
          s+=root->left->right->val; 
          
     }
     if(root->right!=NULL)
     {
         if(root->right->left!=NULL)
          s+=root->right->left->val;
         if(root->right->right!=NULL)
          s+=root->right->right->val; 
          
     }

     return s;
 }
int solve(Tree* root) {
    if(root==NULL)
    {
        return 0;
    }
   int s=0;
   if((root->val)%2==0)
   {
       s+=grandsum(root);
   }

   return s+ solve(root->left) +solve(root->right);
}
